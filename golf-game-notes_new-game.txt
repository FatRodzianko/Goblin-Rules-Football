### new game idea for after (at least trying to) finishing the level editor

# Gameplay Idea
- combination of CardConquest and that HeroCard game/slay the spire?
- - - Goblin units that you command on a hex grid
- - - You have a "hand" of cards that you play during battles
- - - Player and enemy AI
- - - - - - potentially make multiplayer?
- - - - - - - - - a "versus" mode where one player is trying to stop the other from advancing through the game / playing in stead of the CPU player
- - - - - - - - - 3 person teams? Just increase map size and enemy unit amount?
- - - You are escorting a bomb you must protect from enemies
- - - - - - win a level by killing all enemy units or capturing the enemy "base"/stronghold? on the level
- - - reach "check points" where you drop off a bomb to explode
- - - - - - will be a "boss" battle of sorts
- - - - - - - - - four bosses? Maybe five
- - - if all your units die, you lose. Start over?
- - - - - - maybe have player chose to start over or at last checkpoint
- - - if enemy captures your bomb, you lose
- - - - - - can attach bomb to units to make escorting easier
- - - - - - but if that unit is killed, the bomb is captured
- - - At the beginning of each turn, get new cards
- - - - - - maybe show player 2 cards, they choose one
- - - - - - - - - cards are random per level?
- - - - - - then player can remove a certain number of cards. The "power" of the discarded cards can go toward a currency, that is spent on new cards?
- - - - - - - - - currency doesn't carry over though, use it or lose it?
- - - - - - - - - maybe can also use discarded card power to buy power ups?
- - - the "checkpoints" are where boss battles will be
- - - - - - player needs to drop bomb off at boss camp/outpost
- - - - - - boss music!
- - - - - - bosses are like a siege or something? Player is trying to take a "castle" type structure
- - - - - - - - - hexes are marked as fortications
- - - - - - - - - player can take them one by one, or go through to the "heart" of the outpost and immediately defeat them
- - - - - - center of outpost will have the boss unit
- - - - - - - - - special character. Extra strong. Will have some unique abilities like more attack/whatever, special modifiers in battles, stuff like that
- - - - - - - - - - - - new sprite for each...
- - - - - - - - - Boss idea: bomb thrower
- - - - - - - - - - - - throws bombs towards your units, especially focused on the unit with the bomb (or just at the bomb if you aren't carrying it)
- - - - - - - - - - - - bombs take 2 turns to exploded: damage anything in a 1 tile radius from the bombs tile
- - - - - - - - - - - - - - - if your bomb/bombcarrier is in an explosion radius, your bomb detonates and you lose!
- - - - - - - - - - - - bombs that take 3 turns, explosion radius of 2?
- - - when a boss is defeated, choose between two upgrades?
- - - - - - each upgrade randomly chosen? Or have an option to have "set" upgrades?
- - - player must kill the final boss to beat the game or "run"
- - - new run+?
- - - - - - give player's option to due more runs if they beat one, make it substantially harder?
- - - - - - only way to carry over to next game?
- - - maybe after a player makes a run, they can keep 1 power up or 1 card to carry over to next run?
- - - - - - way to "upgrade" in some sense between runs, making subsequent runs easier?
- - - - - - get more units, cards, better starting cards, greater hand size to start, etc?
- - - - - - maybe the way you upgrade is the collective value of the deck you built
- - - - - - - - - use that value to buy permenant upgrades, like discussed above?
- procedurally generate each new "level"?
- - - also have the enemy squad generated new for each level
- - - and the enemy's hand
- "sneak" action
- - - move half normal distance BUT make no noise, so enemies won't detect you
- - - have to turn off light/smother torch. Reveal less fog of war as you pass through. Basically only see tiles immediately around you
- "Low Light Vision"
- - - without a torch, can only see immediate surroundings
- - - can faintly see torches in the distance. Fog turns a light grey to show there is a torch, but you can't see what is near the torch/light until you get close
- - - ability to upgrade low light vision to increase distance you can see lights from, and see farther from your light
- Other "actions"
- - - open doors / interact
- - - - - - dungeons should have multiple paths. Some will be closed off by doors
- - - - - - unlocked doors can be opened, but they make a noise detectable by enemies
- - - - - - - - - "grease can" upgrade to lower distance noise from door open travels?
- - - - - - some doors require multiple "switches" to be opened in different locations to open?
- - - - - - - - - make the switches have to be opened on the same turn, forcing player to split up group to get by this?
- - - - - - should try to make it so there is always an "open" path to the end, but it is long and full of enemies? Or maybe not
- - - unlock doors/pick locks/smash open
- - - - - - some doors will be locked
- - - - - - You can choose to smash them open (if you have a heavy unit?), but makes a ton of noise
- - - - - - blow up door if you have an engineer?
- - - - - - if you have a lock picker, you can pick the lock
- Special unit types for special actions
- - - selected at beginning of game, and can be "won" or trained after completing levels?
- - - depending on the special unit type, may have some starts lowered for balance?
- - - - - - lock picker
- - - - - - - - - picks locks on doors
- - - - - - - - - does very little combat damage
- - - - - - engineer
- - - - - - - - - blows open doors
- - - - - - - - - dig through some "soft" walls. Makes a lot of noise without upgrades though?
- - - - - - - - - low combat damage, unless they spent a turn "making grenades" or something?
- - - - - - - - - - - - using a grenade during a battle will make a lot of noise though
- - - - - - heavy infantry
- - - - - - - - - can break down dooors
- - - - - - - - - extra combat damage
- - - - - - - - - - - - requires 2 "attack" from an opponents card to kill?
- - - - - - - - - low movement
- - - - - - scout
- - - - - - - - - moves twice as fast
- - - - - - - - - better low light vision, so can see farther
- - - - - - - - - less combat damage
- - - - - - ranged
- - - - - - - - - more combat damage when acting as a reinforcement
- - - - - - - - - less combat damage when on the tile being attacked?
- Instead of battles occuring when players end turn on same tile, they only need to be adjacent?
- - - can make the rooms a little bigger that way? More room to move in
- - - direction units were moving in before the battle can cause things to be "flanked" or attacked from behind
- - - - - - if unit was moving straight forward, and enemy unit is in the tile directly infront of them, direct attack
- - - - - - if one unit was moving forward toward the battle tile, and the other is moving away, then flank attack?
- - - - - - - - - the units being flanked do less overall combat damage. Flanking units gain 1 attack/sword to kill units?
- - - - - - only have a unit be "flanked" if the are moving directly away from the battle site, or left/right, or back and left/right. Diagonal toward the battle site isn't a flank?

# Lore?
- team of sapper goblins escorting bomb through mines
- - - need to proect the bomb from attackers
- - - if enemy captures your bomb, you lose


### Tasks to get a PoC going?
- Creating a hex grid with hex tiles
- - - https://www.youtube.com/watch?v=9WElejje6Sc
- - - https://www.youtube.com/watch?v=Vt6hM6f9-Dk
- - - https://www.youtube.com/watch?v=0nXmuJuWS8I
- movement on a hex grid
- - - https://youtu.be/htZijEO7ZmE?si=gfo-SYl1lne9AJIT
- generate a hex grid
- - - load from a saved "map"/json file
- - - auto generate a new level, with tiles you can move on and tiles you can't (obstacles and walls)
- - - - - - walls surrounding the outside of the level
- AI/Opposing player moves their characters in response to yours
- - - AI will move toward player and their bomb
- - - AI will attack if they have an advantage (greater army than player on a tile) or if they don't have a path to retreat)
- player achieving goal (capturing the flag/planting bomb) ends level, new level is generated
- cards and battle system following card conquest
- - - detect battles
- - - show player and oppnent decks/hands
- - - player chooses card
- - - opponent AI chooses their "best" card if they can win, "worst" card if it looks like a sure defeat
- turn based strategy course from code monkey?
- - - https://unitycodemonkey.com/courses.php?c=turnbasedstrategy

### First steps to get started
- Created a hex grid with tiles
- - - try as hex first (flat top? pointy top?)
- - - - - - see this aseprite tool for creating hex tiles? https://www.reddit.com/r/aseprite/comments/1awquqn/created_a_tool_for_creating_isometric_hexagonal/
- - - - - - CodeMonkey tutorial was for pointy top. I think for flat top all I'd change is have a horizontal offset of 0.75 instead of a vertical offset. So, change HEX_VERTICAL_OFFSET_MULTIPLIER to HEX_Horizontal_OFFSET_MULTIPLIER
- - x if creating hex pixel art tiles is too difficult/annoying, just switch to a rectangle grid
- - - - - x think Core Keeper for asethetic
x Detect mouse click on a grid tile
- - x highlight the correct grid position when clicked on
x Have a unit that is on the grid
- - x make unit selectable by clicking on them
- - - - - x selectable by clicking on the tile/grid object the unit is on
- - - select multiple units:
- - - - - - if multiple units are selected, get their available grid positions they can each move to
- - - - - - check what movement grid positions the multiple units share, if any 
- - - - - - if there are shared movement grid positions, show those grid positions as possible "moves"
x Pathfinding to allow unit to move from one grid position to another
- Allow for obstacles/walls on the grid
- - x pathfinding to navigate around obstacles
- "Fog of war" on the grid - only reveal tiles within a certain range of player's units
- - - black for tiles that have not been navigated to or seen yet. Transparent grey for ones that have been but are no longer in view
- - - - - - "in view" modifiable by a "view distance" for each unit?

- How to calculate valid move when you have multiple units selected that are on different starting tiles
- - - calculate all possible move positions for each selected unit individually
- - - - - - if there are units starting from the same tile, and they have the same max move distance, just copy that move grid calculation
- - - - - - - - - to try and reduce repeat calculations and make this faster?
- - - - - - - - - maybe make a struct or something that's like:
							GridPosition startPosition
							int unitMoveDistance
							List<GridPosition> moveGridPositions
- - - - - - - - - - - - so when you check a unit, you see if the List of these structs has an entry with the same starting grid position and move distance as the unit you are checking. If not, make the move calculations. If yes, skip calculation
- - - - - - - - - - - - call it MovePositionStruct
- - - Find the "overlapping" tiles that all selected units have in their move grid positions
- - - - - - Loop through each selected unit/MovePositionStruct
- - - - - - - - - For the first iteration, save all the move positions to a list of "firstPositionMoves" / "commonMoves"
- - - - - - - - - For subsequent iterations:
- - - - - - - - - - - - Loop through all the commonMoves, check if they exist in the unit/MovePositionStruct being checked
- - - - - - - - - - - - - - - if the commonMove DOES NOT exist in the unit/MovePositionStruct's move list, REMOVE from commonMoves
- - - - - - - - - - - - - - - if the commonMove DOES exist in the unit/MovePositionStruct's move list, KEEP from commonMoves
- - - - - - - - - Grid positions that are left are the move positions that all selected units shared and can move to (I think)
- - - maybe relavent to performance? Fastest way to iterate over a List/Array in C# is: for loop with Length/Count cached in variable
- - - - - - for (int i = 0, n = collection.Count; i < n; i++) { /*...*/ }
- - - - - - https://www.reddit.com/r/dotnet/comments/ovscq7/performance_comparison_of_iteration_methods_over/
- precompute and cache grid neighbors when creating the path nodes?
- - - Add _neighborList to the pathnode class
- - - would need to remember to add neighbors if a new node became walkable or something? Like if players dug through wall
- - - - - - find neighbors for the new node
- - - - - - then go through each new neighbor, tell them to add the new node to their neighborList (unless the new node is already in the list)
- - - same for remembering to remove a neighbor if it became unblockable

### For hex grid stuff:
- Remember to set the cell size to 2x2
- - - For flat top, the grid's X and Y coordinates are flipped
- - - - - - So, if the grid position is X:4,Y:6 and you want to convert to world position:
- - - - - - - - - World position x = 6 * 2 * .75 = 9
- - - - - - - - - World Position y = 4 * 2 = 8
- - - - - - - - - when setting the tile on the tilemap then:
- - - - - - - - - - - - normal: _floorTileMap.SetTile(new Vector3Int(gridPosition.x, gridPosition.y, 0), _floorTile);
- - - - - - - - - - - - new for flat top: _floorTileMap.SetTile(new Vector3Int(gridPosition.y, gridPosition.x, 0), _floorTile);
- - - Pointed top is still normal X and Y in the grid space. Probably easier to just use that...

### isometric grid stuff:
https://www.youtube.com/playlist?list=PLaiY5ttc7bmd070CyEaCG0xBqecxZXk-d

### Pivot to make the game more of a tactics sort of stealth game
"Midnight Bomb Run"
- Goblins have evolved beyond the human need for bloodsheed to justify their conquests. All the great Goblin Nations agreed to (something about laser tag for combat)
- - - An elite group of sappers and engineers were chosen to infiltrate behind enemy lines and plant the gigaton laser bomb at the heart of the <x empire>. Misson Code Name: Midnight Bomb Run

### Wall Tiles
- Make the top of the walls one "flat" color so I don't need to make a million different tiles?
- - - should reduce it to ~8 different wall tiles, instead of the 20 I already have...
x create a "wall object" that is just a rectangle collider
- - x spawn them at wall tile position
- - x store in dictionary of position:wall object
- - - - - x to be used to find wall objects to remove if a wall tile is removed?
- - x create a "wall object holder" to make them all a child of


### Change to a "freeze tag" game?
- when you shoot an enemy, you choose a body part to "freeze"
- - - Legs, Arms, Head
- - - Legs
- - - - - - shoot one leg max movement reduced by half
- - - - - - Freeze both, no movement allowed
- - - Arms
- - - - - - Shoot one arm shoot distance reduced by half 
- - - - - - Both, cannot shoot, throw grenades
- - - - - - OR
- - - - - - - - - one arm shot: double cost of all "arm" actions: Shooting, melee, throwing grenade, interacting with doors, etc...
- - - - - - - - - shoot both arms: all "arm" actions are disabled
- - - Head
- - - - - - This one maybe a bit "tricky," but...
- - - - - - shooting a unit's head fixes the characters "point of view"
- - - - - - - - - When a unit takes an action normally, their "head" turns toward the action in one of the eight directions
- - - - - - - - - - - - Up, Down, Left, Right - Up&Right, Down&Right, Down&Left, Up&Left
- - - - - - - - - - - - there will be a "cone of vision" to show where the unit is looking after their action
- - - - - - - - - When you shoot a unit in the head, the unit can no longer perform actions outside of their "cone"
- - - - - - - - - - - - so, if the unit is looking "up" when shot in the head, they could not then shoot at a target that is "down" from them
- - - - - - This might be a bit OP, so maybe make it so you have to hit the head twice for the effect, or shoot the body first then the head?
- You can unfreeze a teammate's body part by shooting them?
- for grenades: freeze one "body part" for every unit that is in the blast radius?
- - - if both legs are already frozen, freeze an arm. If both arms and legs are frozen, freeze head?
- - - can also be used to unfreeze teammates if you hit them
- - - to Heal a teammate, must first switch gun to "heal" mode
- - - - - - this is an action you have to spend
- - - - - - switch to heal, can target teammate. Shoot to heal
- - - - - - to target an enemy again, you will need to spend another action point to switch to attack, then can target enemy
- - - - - - A medic class that doesn't need to switch?


### Immediate Tasks:
x Have actions check if applicable body part is frozen
- - x if yes, affect actions for that task
- - x each action should have an associated body part?
x Display on action if it is "hindered" or affected by a half-frozen or frozen body part
- - x indicator to player when half frozen so they know that action will use all action points
- - x indicator to player when fully frozen to show why the action is not available
x Action to display an icon to show what body part affects them?
- - x scriptable object for "sprite mapping"
- - - - - x map a sprite for not frozen, half frozen, and full frozen
- - - - - x create scriptable object for each body part (head, arms, legs)
x Event when a body part's frozen state changes
- - x actions will update action point cost as needed?
Sub Actions
x BaseAction has flag for "HasSubAction"
- - x will check this when player takes an action. Does a sub action need to be performed first?
- BaseSubAction script to contain logic and assets for subaction...
- - - things like any GUI elements for user selecting something (Like what body part to shoot)
- - - will need to be able to take new parameters from the player, and then pass those parameter's to the BaseAction's TakeAction function?
x Use events to keep track of when a player starts a subaction, completes it, or cancels it
- - x when sub action has started, ignore player engaging with other actions (make them unselectable?)
- - - - - x set _isBusy to true?
- - - - - x setting isBusy to true and just passing around the "ClearBusy" callback seems to work?
- - x when sub action completes, call the base action's TakeAction?
- - - - - - maybe create an async job to wait on the subaction. When that completes, either start the BaseAction's TakeAction or cancel action?
- - x if subaction is cancelled (clicking away from sub action's GUI items?), don't do the current selected action and re-enable other actions to be selected?
- Tests:
x Test 1
- - - have sub action start, and create event that it has started
- - - - - - UnitActionSystem will wait for the sub action to complete before executing TakeAction
- - - sub action will just start a 5 second timer. When timer ends, sub action completes
- - - - - - Unit Action System listens for the subaction complete event, when it does, start current selected action's TakeAction
x Test 2 (testing cancelling sub action)
- - - sub action starts, and then listens for player keypresses
- - - - - - one key to complete action ("a") and one to cancel action ("c")
- - - UnitActionSystem will listen for the complete and cancel events
- - - - - - when cancel event is triggered, re-enable other actions?
- AI logic for shooting with the body part stuff
- - - Find unit with the most amount of half frozen body parts
- - - - - - target that unit, choosing one of the half frozen body parts to fire against
- - - need to change TakeAction to accept a body part? Or have TakeSubAction be a required function in all BaseActions?


# How to Let player select friendly unit with shoot action
x Currently when performing an action, if the player clicks on a different friendly unit, they select that unit instead of performing the action on that unit
x I want the shoot action to be able to target friendly units in order to "heal" them
- - - with current setup, it is impossible to actually target a friendly unit
x In UnitActionSystem, the TryHandleSelectGridPosition checks if there is a friendly unit on the grid position, if yes, instead of taking the action at that position, the friendly unit is now selected
- - x Add a check to TryHandleSelectGridPosition to check the current selected action and see if it has "CanTargetFriendlyUnits" set to true
- - - - - x if it is true, then check if the grid position is a valid grid position for the current action
- - - - - - - - x if THAT is also true, then DO NOT select that action
x Need to make sure there is an obvious way to "cancel" your selected action?
- -  so if you do want to select a unit instead of targetting one, you can cancel the action then select the unit?
- - x if the player right clicks have the current action be set to null? or something like that?
- - - - - x make sure to remove the grid highlights from the previous action when "cancelling" the action?
x Add checks for the BodyPart choosing UI for friendly vs enemy units - will change what is "disabled" and allowed to be hit
- - x can only target a friendly body part if it is half or full frozen. Cannot if not frozen
- - x can only target an enemy body part if it is half or not frozen. Cannot if fully frozen
x Should change it so it is an action to switch between damage and healing shooting?
- - x A new action switch firing modes. Takes 1 action point to switch from damage to heal
- - - - - x arm body type
- - x "Medic" unit doesn't have to switch?
- - - - - x medic unit will also have a "healing grenade" that heals teammates (and enemies if they are in the splash damage?)
- - - - - x create "Unit Type" enum or something that all units have
- - - - - - - - x create different prefab variants for the different unit types
- - - - - - - - - - - x for now, just "normal" and "medic"
- - - - - x Also create the "Grenade Type" enum for the grenade action, that gets passed to the grenade projectile so the game knows whether to heal or damage from the grenade
- - - - - - - - x healing grenade should not blow up obstacles
x Add sub action to sword action
- - x player chooses body part to target, then does double damage to that body part
- - - - - x basically, a melee attack will always fully freeze the targeted body part
- - - - - x or, have it be that the player chooses to damage one body part twice or all parts once?
- - - - - x update UI offset of the body part selector so it isn't covering the target?
- AI Action for switching from Damage/Heal Mode
- - x check remaining action points versus action cast
- - - - - x if only one action point left, or using the Switch action would use all remaining action points, set action value to -500?
- - x get all available targets for shooting for both damage and healing
- - - - - x compare total number of targets for each. For one with majority, give +100 action value, tie going to damage
- - - - - x get health status of each target
- - - - - - - - x for damage, count up every target that has at least one half frozen body part. +100 each
- - - - - - - - x for heal, count up every target that has a half frozen body part as 50, fully frozen at 100
- - x check damage mode of nearby teammates. If at least one is set to heal, -200. If there is a medic nearby, -500
- - x compare action value of damage to action value of heal. 
- - - - - x switch to mode with the higher value, if necessary
- - - - - - - - x if unit is in damage mode, but heal has greater value, then switch
- - - - - - - - x if unit is in damage mode, and damage has greater value, then don't switch. Set action value to 0
- Update AI action on Shoot Action to check if it is damage mode or healing mode, and medic mode
- - - Currently it only makes checks for damage mode, or at least only makes calculations based on target being an enemy you want to damage
- - - create three new functions that all return an action value and a target body part
- - - - - - Medic Mode Check
- - - - - - - - x check if target is enemy or friendly. If friendly, run heal check. If enemy, run damage check
- - - - - - - - x for heal check, add a bonus to the action value to make medics more likely to pick the heal action?
- - - - - - if target is an enemy AND damage mode is damage
- - - - - - - - x DamageMode check
- - - - - - - - - - - x just use what is already there? But transfer to its own function
- - - - - - if target is friendly AND damage mode is heal
- - - - - - - - x Heal Mode Check
- - - - - - - - - - - x weight to target fully frozen body parts, each body part given a priorty weight of its own
- Update GetBestEnemyAIAction
- - - instead of just taking the action with the highest action value, maybe have a check for unit type and have certain unit types favor certain actions, regardless of action value.
- - - - - - Ex: Medic should always do a shoot/heal action if possible

### Longer term tasks
x When doing shoot action, prompt player to choose what body part to shoot before taking action
- Add in a "cover" system
- - - full cover if behind a wall or obstable that provides full coverage - can't hit that unit unless you flank them
- - - half cover if behind a shorter half wall/obstable - can only hit arms or head, not legs
- Change "defend" to "hunker down" or "take cover"
- - - allows for full cover if unit is behind wall/obstacle that only provides half cover
- - - removes unit vision past that wall though?
- Fog of war based on what units can "see"
- - - ties this into the "vision cone" that's affected by head status
- Move ShootAction's DoesShotHitWallOrObstacle function to a static class like LevelGrid or GridSystem so that other functions/Actions/Whatever can access it and check for walls between two points?


### Special unit/enemy types
- To make the game less repetitive, will need special units/enemies to provide gameplay variety/force different play styles
- types:
- - - Swap places - can swap places with an opposing team's unit. Can act as a "sacrificial" lamb, swap themselves into the other team's units, and bring an enemy into their units area
- - - - - - Some way to make them "strong" or take on lots of damage/tank?
- - - - - - could make them ice explode if you freeze them? probably too much
- - - - - - the swapping can also be used for recon/intel. Swap in, see the opposing team, swap out
- - - attack dog
- - - - - - moves fast. Can only melee
- - - - - - just has legs and head, no arms?
- - - - - - - - - or arms are just front legs, so you have to freeze them 4 times to completely stall movement?
- - - miner
- - - - - - can dig through walls to create new pathways
- - - builder/engineer
- - - - - - can build temporary barricades or bridges?
- - - demo
- - - - - - can block up barricades or other barriers that are destructible?
- - - - - - only one with (normal) grenade
- - - medic
- - - - - - does not need to switch shooting type to heal. Can always heal units
- - - - - - has special healing grenade that heals teammates. Doesn't damage enemies though?
- - - gunner
- - - - - - Can target more than one enemy with a shoot action
- - - - - - must "deploy" their gun, like it's a machine gun or something
- - - - - - cannot move while deployed
- - - - - - deploying basically takes up one full turn?
- - - - - - cannot switch to a healing mode. Can only do damage
- - - berserker/melee
- - - - - - melee damage - can fully freeze body parts in one hit
- - - - - - more movement distance/speed than regular unit
- - - - - - maybe has worse vision than a "scout" or something like that? Or make this the scout/recon unit

768x432